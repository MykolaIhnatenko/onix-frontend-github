@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";



$circle-size: 90%;
$blending: hard-light;


.gradientBg {
  $color-bg1: #080a0f;
  $color-bg2: #000000;
  
  $color1: #022246;
  $color2: #000000;
  $color3: #084b88;
  $color4: #113a30;
  $color5: #185d59;
  
  
  width: toRem(1920);
  max-width: toRem(1920);
  height: 100vh;
  position: fixed;
  overflow: hidden;
  background: linear-gradient(40deg, $color-bg1, $color-bg2);
  top: 0;
  z-index: -1;
  
  .noiseBg {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 1;
    mix-blend-mode: soft-light;
    opacity: 0.2;
  }
  
  .gradientsContainer {
    filter: url(#goo) blur(40px);
    width: 100%;
    height: 100%;
  }
  
  .g1 {
    position: absolute;
    background: radial-gradient(ellipse at center, rgba($color1, 0.8) 0%, rgba($color1, 0) 50%) no-repeat;
    width: $circle-size;
    height: $circle-size;
    top: calc(50% - #{$circle-size} / 2);
    left: calc(50% - #{$circle-size} / 2);
    transform-origin: center center;
    animation: moveVertical 30s ease infinite;
    opacity: 1;
  }
  
  .g2 {
    position: absolute;
    background: radial-gradient(ellipse at center, rgba($color2, 0.4) 0%, rgba($color2, 0.1) 40%) no-repeat;
    width: $circle-size;
    height: $circle-size;
    top: calc(50% - #{$circle-size} / 2);
    left: calc(50% - #{$circle-size} / 2);
    transform-origin: calc(50% - 400px);
    animation: moveInCircle 20s reverse infinite;
    opacity: 1;
  }
  
  .g3 {
    position: absolute;
    background: radial-gradient(ellipse at center, rgba($color3, 0.8) 0%, rgba($color3, 0) 50%) no-repeat;
    width: $circle-size;
    height: $circle-size;
    top: calc(50% - #{$circle-size} / 2 + 200px);
    left: calc(50% - #{$circle-size} / 2 - 500px);
    transform-origin: calc(50% + 400px);
    animation: moveInCircle 40s linear infinite;
    opacity: 1;
  }
  
  .g4 {
    position: absolute;
    background: radial-gradient(ellipse at center, rgba($color4, 0.8) 0%, rgba($color4, 0) 50%) no-repeat;
    width: $circle-size;
    height: $circle-size;
    top: calc(50% - #{$circle-size} / 2);
    left: calc(50% - #{$circle-size} / 2);
    transform-origin: calc(50% - 200px);
    animation: moveHorizontal 40s ease infinite;
    opacity: 0.7;
  }
  
  .g5 {
    position: absolute;
    background: radial-gradient(ellipse at center, rgba($color5, 0.8) 0%, rgba($color5, 0) 50%) no-repeat;
    width: calc(#{$circle-size} * 2);
    height: calc(#{$circle-size} * 2);
    top: calc(50% - #{$circle-size});
    left: calc(50% - #{$circle-size});
    transform-origin: calc(50% - 800px) calc(50% + 200px);
    animation: moveInCircle 20s ease infinite;
    opacity: 1;
  }
  
  &.lightMode {
    $color-bg1: #fff;
    $color-bg2: #fff;
    
    $color1: #75BAE9;
    $color2: #fff;
    $color3: #B6E0F4;
    $color4: #B4E3E6;
    $color5: #D0F3F5;
    
    background: linear-gradient(40deg, $color-bg1, $color-bg2);
    position: absolute;
    width: 100%;
    height: 100%;
    
    .g1 {
      background: radial-gradient(ellipse at center, rgba($color1, 0.8) 0%, rgba($color1, 0) 50%) no-repeat;
    }
    
    .g2 {
      background: radial-gradient(ellipse at center, rgba($color2, 0.4) 0%, rgba($color2, 0.1) 40%) no-repeat;
    }
    
    .g3 {
      background: radial-gradient(ellipse at center, rgba($color3, 0.8) 0%, rgba($color3, 0) 50%) no-repeat;
    }
    
    .g4 {
      background: radial-gradient(ellipse at center, rgba($color4, 0.8) 0%, rgba($color4, 0) 50%) no-repeat;
    }
    
    .g5 {
      background: radial-gradient(ellipse at center, rgba($color5, 0.8) 0%, rgba($color5, 0) 50%) no-repeat;
    }
  }
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}
