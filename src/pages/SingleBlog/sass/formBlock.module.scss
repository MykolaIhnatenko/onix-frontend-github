@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.formSection {
  position: relative;

  .bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;

    img {
      object-fit: cover;
      object-position: top;
    }

    @media only screen and (min-width: $screen-lg + 1) {
      &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 60%;
        height: 100%;
        background: linear-gradient(111deg, #FFF 64.14%, rgba(255, 255, 255, 0.00) 80.07%);
      }
    }
  }

  .container {
    padding-top: toRem(80);
    padding-bottom: toRem(80);

    @media only screen and (min-width: $screen-md) {
      max-width: toRem(1440);
    }

    @media only screen and (min-width: $screen-lg + 1) {
      display: flex;
      gap: 50px;
    }

    @media only screen and (min-width: $screen-xxl + 1) {
      gap: 11.5%;
    }

    .formBlock {
      @media only screen and (min-width: $screen-lg + 1) {
        flex-basis: calc(50% - 25px);
      }

      @media only screen and (min-width: $screen-xxxl + 1) {
        flex-basis: 40.2%;
      }

      .title {
        font-size: toRem(30);
        line-height: getLineHeight(40, 30);
        font-weight: 500;
        padding-bottom: toRem(30);

        @media only screen and (min-width: $screen-md) {
          font-size: toRem(40);
          line-height: getLineHeight(56, 40);
          padding-bottom: toRem(40);
        }

        @media only screen and (min-width: $screen-lg + 1) {
          font-size: toRem(50);
          line-height: getLineHeight(64, 50);
          padding-bottom: toRem(60);
        }
      }

      .subtitle {
        font-size: toRem(20);
        line-height: getLineHeight(28, 20);
        font-weight: 500;

        @media only screen and (min-width: $screen-md) {
          font-size: toRem(30);
          line-height: getLineHeight(46, 30);
        }

        @media only screen and (min-width: $screen-lg + 1) {
          max-width: toRem(470);
        }
      }
    }

    .estimateBlock {
      display: none;

      @media only screen and (min-width: $screen-lg + 1) {
        display: block;
        flex-basis: calc(50% - 25px);
      }

      @media only screen and (min-width: $screen-xxl + 1) {
        flex-basis: 48.2%;
      }

      .estimateTitle {
        font-weight: 500;
        font-size: toRem(30);
        line-height: getLineHeight(40, 30);
      }

      .pb {
        @media only screen and (min-width: $screen-xl) {
          padding-bottom: toRem(20);
        }
      }

      .estimateContent {
        .estimateItem {
          padding-top: toRem(20);

          &:not(:last-of-type) {
            padding-bottom: toRem(20);
            border-bottom: 2px solid var(--color-black);
          }

          .text {
            margin: 0;
            padding-top: toRem(10);
          }
        }
      }
    }
  }
}

