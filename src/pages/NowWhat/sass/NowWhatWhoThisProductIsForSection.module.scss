@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.whoThisProductIsForSection {
  position: relative;
  background-color: var(--color-white);
  overflow: hidden;

  .imageBlock {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: toRem(1440);

    @media only screen and (min-width: $screen-md) {
      top: toRem(-150);
    }

    img {
      object-fit: cover;
    }

    &::before {
      position: absolute;
      content: '';
      width: 103%;
      height: 5%;
      left: 0;
      bottom: -3%;
      background-color: white;
      filter: blur(15px);
      z-index: 2;
    }
  }

  .container {
    padding-top: toRem(80);
    padding-bottom: toRem(80);
    z-index: 2;
    position: relative;

    @media only screen and (min-width: $screen-lg + 1) {
      padding-top: toRem(120);
      padding-bottom: toRem(120);
    }

    .name {
      padding-bottom: toRem(20);

      @media only screen and (max-width: $screen-sm) {
        padding-bottom: toRem(15);
        font-size: toRem(14);
        line-height: getLineHeight(20, 14);
      }
    }

    .name, .text {
      margin: 0;
    }

    .title {
      padding-bottom: toRem(30);

      @media only screen and (min-width: $screen-md) {
        padding-bottom: toRem(40);
      }

      @media only screen and (min-width: ($screen-lg + 1)) {
        max-width: toRem(1080);
      }

      @media only screen and (min-width: $screen-xxxl) {
        max-width: toRem(1480);
      }
    }

    .text {
      padding-bottom: toRem(80);

      @media only screen and (min-width: $screen-lg + 1) {
        padding-bottom: toRem(120);
        max-width: toRem(630);
      }

      @media only screen and (min-width: $screen-xxxl) {
        max-width: toRem(710);
      }
    }
  }
}
