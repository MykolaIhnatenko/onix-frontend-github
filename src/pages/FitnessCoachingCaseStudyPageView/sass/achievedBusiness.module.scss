@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.container {
  padding-top: toRem(80);

  @media only screen and (max-width: ($screen-md - 1)) {
    padding: toRem(80) toRem(15);
  }

  .blockTitle {
    font-size: toRem(40);
    line-height: getLineHeight(56, 40);
    padding-bottom: toRem(40);
    padding-left: toRem(70);

    @media only screen and (max-width: $screen-lg) {
      padding-left: toRem(30);
    }

    @media only screen and (max-width: ($screen-md - 1)) {
      font-size: toRem(25);
      line-height: getLineHeight(35, 25);
      padding-left: toRem(0);
      padding-bottom: toRem(30);
    }
  }

  .content {
    display: flex;
    flex-wrap: wrap;

    .contentItem {
      flex: 1 33.33333%;
      position: relative;
      border: 2px solid var(--color-black);
      background: var(--color-white);
      transition: background-color .5s;
      mix-blend-mode: difference;

      &:before {
        content: '';
        display: block;
        padding-top: 100%;
      }

      &:nth-of-type(3n + 2) {
        border-right: 0;
        border-left: 0;
      }

      &:nth-of-type(n + 4) {
        border-top: 0;
      }
      
      @media only screen and (min-width: ($screen-lg + 1)) {
        &:hover {
          background: var(--color-black);
        }
      }

      @media only screen and (max-width: $screen-lg) {
        flex: 1 50%;

        &:nth-of-type(odd) {
          border-right: 0;
          border-left: 2px solid var(--color-black);
        }

        &:nth-of-type(even) {
          border-right: 2px solid var(--color-black);
          border-left: 2px solid var(--color-black);
        }

        &:nth-of-type(3) {
          border-top: 0;
        }
      }

      @media only screen and (max-width: ($screen-md - 1)) {
        flex: 1 100%;
        border-top: 2px solid var(--color-black) !important;
        border-bottom: 2px solid var(--color-black) !important;
        border-right: 0 !important;
        border-left: 0 !important;

        &:nth-of-type(n + 2) {
          border-top: 0 !important;
        }

        &:before {
          content: '';
          display: block;
          padding-top: 0;
        }
      }

      .contentContainer {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: space-between;
        flex-direction: column;
        padding: toRem(30);

        @media only screen and (max-width: $screen-lg) {
          padding: toRem(20);
        }

        @media only screen and (max-width: ($screen-md - 1)) {
          position: relative;
          justify-content: flex-end;
          gap: toRem(15);
          flex-direction: row-reverse;
          padding: toRem(15) 0;
        }

        > div {
          mix-blend-mode: difference;
        }
  
        .title, .id {
          color: var(--color-white);
          font-size: toRem(36);
          line-height: getLineHeight(46, 36);

          @media only screen and (max-width: $screen-lg) {
            font-size: toRem(24);
            line-height: getLineHeight(34, 24);
          }

          @media only screen and (max-width: ($screen-md - 1)) {
            font-size: toRem(20);
            line-height: getLineHeight(28, 20);
          }
        }

        .id {
          @media only screen and (max-width: ($screen-md - 1)) {
            min-width: toRem(30);
          }
        }
      }
    }
  }
}