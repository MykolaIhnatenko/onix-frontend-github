@import '../../../pages/App/sass/breakpointsVariables';
@import '../../../pages/App/sass/functions';


.blockContainer {
  position: relative;
  padding-bottom: toRem(120);
  
  @media only screen and (max-width: $screen-lg) {
    padding-bottom: toRem(80);
    padding-right: toRem(30);
  }
  
  @media only screen and (max-width: ($screen-md - 1)) {
    padding-bottom: toRem(60);
    padding-right: toRem(15);
  }
  
  .background {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: toRem(454);
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    &:after {
      content: '';
      width: 100%;
      height: toRem(90);
      position: absolute;
      bottom: toRem(-1);
      left: 0;
      background: linear-gradient(180deg, rgba(255, 255, 255, 0.00) 0%, #FFF 100%);
    }
  }
  
  .wrapper {
    display: flex;
    flex-direction: row;
    gap: toRem(68);
    justify-content: space-between;
    overflow-y: hidden;
    
    @media only screen and (max-width: $screen-xl) {
      gap: toRem(50);
    }
    
    @media only screen and (max-width: $screen-lg) {
      flex-direction: column;
      gap: 0
    }
    
    .contentWrapper {
      width: 50%;
      
      @media only screen and (max-width: $screen-lg) {
        width: 100%;
      }
    }
    
    .textContainer {
      position: relative;
      padding-top: toRem(146);
      max-width: toRem(560);
      
      @media only screen and (min-width: $screen-xxl) {
        max-width: 100%;
      }
      
      @media only screen and (max-width: $screen-xl) {
        max-width: toRem(450);
      }
      
      @media only screen and (max-width: $screen-lg) {
        max-width: 100%;
      }
      
      @media only screen and (max-width: ($screen-md - 1)) {
        padding-top: toRem(136);
      }
      
      .blockTitle {
        padding-bottom: toRem(40);
        max-width: toRem(440);
        
        @media only screen and (min-width: $screen-xxl) {
          max-width: 100%;
        }
        
        @media only screen and (max-width: $screen-lg) {
          font-size: toRem(50);
          line-height: getLineHeight(64, 50);
        }
        
        @media only screen and (max-width: ($screen-md - 1)) {
          padding-bottom: toRem(15);
          font-size: toRem(40);
          line-height: getLineHeight(50, 40);
        }
      }
      
      .blockText {
        margin: 0;
        padding-bottom: toRem(60);
        max-width: toRem(560);

        @media only screen and (min-width: $screen-xxl) {
          max-width: 100%;
        }
        
        @media only screen and (max-width: $screen-lg) {
          max-width: toRem(708);
        }
        
        @media only screen and (max-width: ($screen-md - 1)) {
          padding-bottom: toRem(40);
        }
        
        &.second {
          max-width: toRem(634);
          margin-left: auto;
          
          @media only screen and (max-width: $screen-lg) {
            margin-left: 0;
            padding-bottom: toRem(60);
            max-width: toRem(708);
          }
          
          @media only screen and (max-width: ($screen-md - 1)) {
            padding-bottom: toRem(40);
          }
        }
      }
    }
    
    .contentContainer {
      position: relative;
      display: flex;
      
      @media only screen and (max-width: $screen-lg) {
        flex-direction: column;
      }
      
      .sign {
        width: 100%;
        min-width: toRem(402);
        
        @media only screen and (max-width: $screen-lg) {
          min-width: auto;
          padding-right: 0;
        }
        
        .btnContainer {
          padding-bottom: toRem(60);
          
          @media only screen and (max-width: ($screen-md - 1)) {
            padding-bottom: toRem(40);
          }
          
          .btn {
            font-family: var(--ibmPlexMono);
            border: 2px solid #000;
            background: #FFF;
            width: 50%;
            padding: toRem(9) toRem(16);
            font-size: toRem(16);
            line-height: getLineHeight(22, 16);
            font-weight: 500;
            text-transform: uppercase;
            
            &:hover {
              background: #caf6f7;
            }
            
            &.left {
              border-radius: toRem(21) 0 0 toRem(21);
              border-right: none;
            }
            
            &.right {
              border-radius: 0 toRem(21) toRem(21) 0;
            }
            
            &.active {
              background: #B6EDEE;
            }
          }
        }
        
        .content {
          .contentItem {
            padding: toRem(15) 0;
            display: flex;
            gap: toRem(40);
            border-top: 1px solid #D9D9D9;
            align-items: center;
            
            @media only screen and (max-width: $screen-lg) {
              gap: toRem(120);
            }
            
            @media only screen and (max-width: ($screen-md - 1)) {
              flex-direction: column;
              align-items: flex-start;
              gap: 0;
            }
            
            
            .iconDate {
              display: flex;
              gap: toRem(30);
              
              @media only screen and (max-width: ($screen-md - 1)) {
                gap: toRem(20);
              }
              
              svg {
                min-width: toRem(40);
              }
              
              .date {
                margin: 0;
                max-width: toRem(177);
                min-width: toRem(177);
                font-size: toRem(20);
                line-height: getLineHeight(28, 20);
                
                @media only screen and (max-width: ($screen-md - 1)) {
                  margin-top: toRem(5);
                  max-width: none;
                  min-width: auto;
                  font-size: toRem(18);
                  line-height: getLineHeight(26, 18);
                }
              }
            }
            
            
            .dateContainer {
              display: flex;
              gap: toRem(30);
              
              @media only screen and (max-width: $screen-lg) {
                gap: toRem(120);
              }
              
              @media only screen and (max-width: ($screen-md - 1)) {
                margin-top: toRem(15);
                margin-left: toRem(60);
              }
              
              .title {
                display: flex;
                align-items: center;
                margin: 0;
                max-width: toRem(425);
              }
            }
          }
        }
      }
    }
    
    .imageBlock {
      margin-top: toRem(146);
      width: 60%;
      position: relative;
      height: toRem(942);
      min-width: toRem(430);
      
      @media only screen and (max-width: $screen-lg) {
        width: 100%;
        max-width: toRem(610);
        height: toRem(863);
        margin: 0 auto;
      }
      
      @media only screen and (max-width: ($screen-md - 1)) {
        min-width: 0;
        height: auto;
        padding: 0 toRem(15);
      }
      
      img {
        width: 100%;
        object-fit: cover;
        object-position: top;
        height: auto !important;
        position: relative !important;
        
        @media only screen and (max-width: $screen-lg) {
          height: 100%;
        }
      }
    }
    
    .contentUnderText {
      display: none;
      text-align: center;
      font-size: toRem(30);
      line-height: getLineHeight(40, 30);
      padding: toRem(60) 0 toRem(80);
      max-width: toRem(708);
      margin: 0 auto;
      
      @media only screen and (max-width: $screen-lg) {
        display: block;
      }
      
      @media only screen and (max-width: ($screen-md - 1)) {
        font-size: toRem(20);
        line-height: getLineHeight(28, 20);
        padding: toRem(40) 0 toRem(60);
      }
    }
  }
  
  .underText {
    padding-top: toRem(80);
    max-width: toRem(800);
    margin: 0 auto;
    font-size: toRem(30);
    line-height: getLineHeight(40, 30);
    text-align: center;
    @media only screen and (max-width: $screen-lg) {
      display: none;
    }
  }
}


