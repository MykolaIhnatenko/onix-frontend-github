@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.appSection {
  z-index: 5;
  position: relative;

  .appBlock {
    overflow: hidden;
    position: relative;
    z-index: 3;

    .container {
      padding: toRem(48) 0 toRem(48);

      @media only screen and (min-width: $screen-md) {
        padding: toRem(64) 0;
      }

      @media only screen and (min-width: $screen-lg + 1) {
        padding: toRem(104) 0;
        z-index: 2;
        position: relative;
      }

      h2 {
        color: #FBFDFF;
        padding: toRem(32) 0 toRem(40);

        @media only screen and (min-width: $screen-md) {
          padding: toRem(40) 0;
        }

        @media only screen and (min-width: $screen-lg + 1) {
          padding: toRem(64) 0 toRem(80);
          max-width: unset;
        }
      }

      .contentBlock {

        @media only screen and (min-width: $screen-lg + 1) {
          display: flex;
          gap: toRem(60);
        }

        .contentBlockItem {
          @media only screen and (min-width: $screen-lg + 1) {
            max-width: unset;
            flex-basis: 47%;
          }

          h3 {
            color: #C9C9D1;

            @media only screen and (min-width: $screen-md) {
              max-width: toRem(470);
            }
          }

          ul {
            padding-top: toRem(24);
            list-style: none;

            @media only screen and (min-width: $screen-md) {
              padding-top: toRem(32);
            }

            @media only screen and (min-width: $screen-lg + 1) {
              padding-top: toRem(40);
              max-width: toRem(525);
            }

            li {
              color: #D0D0D0;

              span {
                width: toRem(5);
                height: toRem(5);
                border-radius: 50%;
                background-color: #D0D0D0;
                flex-basis: toRem(5);
                flex-shrink: 0;
                margin: toRem(8) toRem(8) 0;

                @media only screen and (min-width: $screen-md) {
                  margin: toRem(10) toRem(10) 0;
                }
              }

              p {
                padding-top: 0;
                display: flex;
              }

              &:not(:first-of-type) {
                padding-top: toRem(24);

                @media only screen and (min-width: $screen-md) {
                  padding-top: toRem(32);
                }
              }

              &:first-of-type {
                p {
                  @media only screen and (min-width: $screen-md) {
                    max-width: toRem(530);
                  }
          
                  @media only screen and (min-width: $screen-lg + 1) {
                    max-width: toRem(600);
                  }
                }
              }
            }
          }

          &:last-of-type {
            padding-top: toRem(32);

            @media only screen and (min-width: $screen-md) {
              padding-top: toRem(64);
            }

            @media only screen and (min-width: $screen-lg + 1) {
              padding-top: 0;
            }
          }
        }
      }

      p {
        color: #D0D0D0;
        padding-top: toRem(32);

        @media only screen and (min-width: $screen-md) {
          padding-top: toRem(56);
          max-width: toRem(510);
        }

        @media only screen and (min-width: $screen-lg + 1) {
          padding-top: toRem(80);
          max-width: toRem(600);
        }
      }
    }

    &::before {
      @media only screen and (min-width: $screen-lg + 1) {
        content: '';
        position: absolute;
        width: 100%;
        height: 18%;
        bottom: 0;
        left: 0;
        background: linear-gradient(171.23deg, rgba(6, 7, 11, 0) 0.89%, #06070B 93.59%);
        border-radius: toRem(40);
        z-index: 2;
      }
    }

    .background {
      z-index: 1;
    }
  }
}
