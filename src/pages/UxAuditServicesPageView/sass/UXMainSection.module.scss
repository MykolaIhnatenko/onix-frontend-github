@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.mainSection {
  position: relative;
  overflow-x: clip;
  .bgContainer {
    img {
      object-fit: cover;
      object-position: center top;

      @media only screen and (min-width: $screen-md) {
        object-position: center top;
      }
    }
  }

  .container {
    padding: 0;
    z-index: 1;
    position: relative;
    box-shadow: 0 -100px 100px var(--color-white) inset;

    @media only screen and (min-width: $screen-md) {
      padding-top: 0;
      padding-bottom: 0;
    }

    @media only screen and (min-width: $screen-lg + 1) {
      display: flex;
      align-items: stretch;
      gap: toRem(70);
      padding: 0 toRem(70) 0;
    }

    @media only screen and (min-width: $screen-xxxl) {
      gap: toRem(80);
      padding: 0 toRem(80) 0;
    }

    .contentBlock {
      padding: toRem(139) toRem(15) toRem(30);
      display: flex;
      flex-direction: column;
      height: auto;

      @media only screen and (min-width: $screen-md) {
        padding: toRem(154) toRem(30) toRem(80);
      }

      @media only screen and (min-width: $screen-lg + 1) {
        flex: 1 1 47.6%;
        padding: toRem(154) 0 toRem(70);
        max-height: calc((var(--vh, 1vh) * 100));
        width: 53%;
      }

      @media only screen and (min-width: $screen-xxxl) {
        padding: toRem(154) toRem(70) toRem(70) toRem(80);
      }

      @media only screen and (min-width: $screen-xxxl) {
        padding: toRem(154) 0 toRem(80);
      }

      .title {
        font-size: toRem(40);
        line-height: getLineHeight(50, 40);

        @media only screen and (min-width: $screen-md) {
          font-size: toRem(50);
          line-height: getLineHeight(64, 50);
          max-width: toRem(708);
        }

        @media only screen and (min-width: $screen-lg + 1) {
          max-width: toRem(640);
        }
      }

      .text {
        p:not(:last-child) {
          margin-bottom: toRem(25);
        }
        &:first-of-type {
          margin-top: toRem(15);
          margin-bottom: toRem(30);

          @media only screen and (min-width: $screen-md) {
            margin-top: toRem(30);
            margin-bottom: toRem(120);
            max-width: toRem(460);
            margin-left: auto;
          }

          @media only screen and (min-width: $screen-lg + 1) {
            margin-bottom: 0;
            margin-top: toRem(40);
            max-width: toRem(460);
          }
        }

        &:nth-of-type(2) {
          margin-bottom: toRem(30);
          margin-top: auto;

          @media only screen and (min-width: $screen-md) {
            margin-bottom: toRem(30);
            max-width: toRem(460);
            margin-top: auto;
          }

          @media only screen and (min-width: $screen-lg + 1) {
            max-width: toRem(460);
            margin-bottom: toRem(40);
            margin-top: auto;
          }

          @media only screen and (min-width: $screen-xl) {
            margin-top: auto;
          }
        }
      }

      .contactBtn {
        @media only screen and (min-width: $screen-md) {
          max-width: toRem(460);
        }

        @media only screen and (min-width: $screen-lg + 1) {
          max-width: 100%;
        }
      }
    }

    .animationBlock {
      z-index: 2;
      position: relative;
      background: url('../../../assets/images/uxAudit/img_bg.webp') repeat center center/contain;
      max-width: 100%;
      margin-right: toRem(-70);
      display: flex;
      align-items: center;
      justify-content: center;
      flex: 1 1 52.4%;
      top: 0;
      min-height: 100vh;

      canvas {
        max-width: 100%;
        transform: scale(1.6);
        opacity: 1;
      }

      @media only screen and (max-width: $screen-lg) {
        display: none;
      }

      @media only screen and (min-width: $screen-xxxl) {
        margin-right: toRem(-80);
      }
    }
  }
}
