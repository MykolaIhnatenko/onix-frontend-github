@import "../../../pages/App/sass/functions";
@import "../../../pages/App/sass/breakpointsVariables";

.section {
  font-size: toRem(18);

  @media only screen and (max-width: ($screen-md - 1)) {
    font-size: toRem(16);
  }
  font-family: var(--generalSans), sans-serif;
  .mainBlock {
    position: relative;
    .background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .mainTitle {
      position: relative;
      padding: toRem(150) 0 toRem(120);
      font-size: toRem(96);
      line-height: getLineHeight(132, 96);
      text-align: center;
      font-weight: 400;


      @media only screen and (max-width: $screen-lg) {
        font-size: toRem(56);
        line-height: getLineHeight(72, 56);
        font-weight: 500;

      }

      @media only screen and (max-width: ($screen-md - 1)) {
        padding: toRem(130) toRem(15) toRem(80);
        font-size: toRem(40);
        line-height: getLineHeight(50, 40);
      }
    }
  }

  .content {
    max-width: toRem(830);
    margin: 0 auto;
    padding: toRem(80) 0 toRem(120);

    @media only screen and (max-width: $screen-lg) {
      max-width: toRem(890);
      padding: toRem(80) toRem(30) toRem(120);
    }

    @media only screen and (max-width: ($screen-md - 1)) {
      padding: toRem(60) toRem(15) toRem(80);
    }

    .contentItem {
      padding-bottom: toRem(60);

      &:last-child {
        padding-bottom: 0;
      }
      .contentTitle {
        font-style: normal;
        font-weight: 500;
        font-size: toRem(30);
        line-height: getLineHeight(40, 30);
        padding-bottom: toRem(40);

        @media only screen and (max-width: ($screen-md - 1)) {
          font-size: toRem(25);
          line-height: getLineHeight(35, 25);
          padding-bottom: toRem(30);
        }
      }

      p {
        color: var(--color-black);
        font-style: normal;
        font-weight: 500;
        font-size: toRem(18);
        line-height: getLineHeight(28, 18);

        @media only screen and (max-width: ($screen-md - 1)) {
          font-size: toRem(16);
          line-height: getLineHeight(28, 16);
        }
      }

      .contentPadding {
        padding-bottom: toRem(30);
      }

      ul {
        :last-child {
          padding-bottom: 0;
        }
        li {
          padding-bottom: toRem(20);
          color: var(--color-black);
          font-size: toRem(18);
          font-style: normal;
          font-weight: 500;
          line-height: getLineHeight(28, 18);

          @media only screen and (max-width: ($screen-md - 1)) {
            font-size: toRem(16);
            line-height: getLineHeight(28, 16);
          }
        }
      }

      .linkTitle {
        font-size: toRem(18);
        font-style: normal;
        font-weight: 600;
        line-height: getLineHeight(28, 18);

        @media only screen and (max-width: ($screen-md - 1)) {
          font-size: toRem(16);
          line-height: getLineHeight(28, 16);
        }
      }

      .boldText {
        color: var(--color-black);
        font-style: normal;
        font-weight: 600;
        font-size: toRem(18);
        line-height: getLineHeight(28, 18);

        @media only screen and (max-width: ($screen-md - 1)) {
          font-size: toRem(16);
          line-height: getLineHeight(28, 16);
        }
      }

      .hiddenBr {
        @media only screen and (max-width: $screen-lg) {
          display: none;
        }
      }
    }
  }

  .link {
    color: var(--color-dark-blue);
    text-decoration-line: underline;
    font-size: toRem(18);
    font-style: normal;
    font-weight: 500;
    line-height: getLineHeight(28, 18);

    @media only screen and (max-width: ($screen-md - 1)) {
      font-size: toRem(16);
      line-height: getLineHeight(28, 16);
    }
  }
}