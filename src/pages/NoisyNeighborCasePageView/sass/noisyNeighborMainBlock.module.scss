@import '../../../pages/App/sass/breakpointsVariables';
@import '../../../pages/App/sass/functions';

.section {
  position: relative;
  height: 100vh;
  padding: toRem(70) 0 0 toRem(70);
  display: flex;
  justify-content: space-between;
  overflow: hidden;
  min-height: toRem(800);
  
  @media only screen and (min-width: $screen-xxxl) {
    min-height: toRem(990);
  }
  
  @media only screen and (max-width: $screen-xl) {
    min-height: 100vh;
    height: fit-content;
    max-height: fit-content;
    flex-direction: column;
  }
  
  @media only screen and (max-width: $screen-lg) {
    padding: toRem(70) toRem(30) 0;
  }

  @media only screen and (max-width: $screen-md - 1) {
    padding: toRem(70) toRem(15) 0;
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .textContainer {
    position: relative;
    color: var(--color-white);
    min-width: toRem(400);
    margin-top: toRem(309);
    
    @media only screen and (width < 1280px) {
      width: toRem(355);
      min-width: toRem(355);
    }

    @media only screen and (max-width: $screen-xl) {
      margin-top: toRem(84);
      width: 100%;
    }

    @media only screen and (max-width: $screen-md - 1) {
      margin-top: toRem(69);
    }

    .text {
      margin-top: toRem(40);
      font-size: toRem(30);
      line-height: getLineHeight(40, 30);
      
      @media only screen and (max-width: $screen-xxl) {
        min-width: toRem(350);
      }

      @media only screen and (max-width: $screen-xl) {
        min-width: auto;
        margin-top: toRem(30);
        font-size: toRem(24);
        line-height: getLineHeight(34, 24);

        br {
          display: none;
        }
      }

      @media only screen and (max-width: $screen-md - 1) {
        margin-top: toRem(15);
        font-size: toRem(20);
        line-height: getLineHeight(28, 20);

        br {
          display: block;
        }
      }
    }
  }

  .imageAnimate {
    position: relative;
    width: toRem(870) !important;
    height: toRem(802) !important;
    
    @media only screen and (min-width: $screen-xxxl) {
      width: toRem(1070) !important;
      height: toRem(952) !important;
    }
    
    @media only screen and (max-width: $screen-xl) {
      margin-top: toRem(40);
      width: 100% !important;
      height: auto !important;
    }
    
    @media only screen and (max-width: $screen-md - 1) {
      margin-bottom: toRem(25);
    }
  }
  
  .hidden {
    @media only screen and (min-width: $screen-xl) {
      display: none;
    }
  }
  
  .fallbackImage {
    position: relative;
    right: 0;
    top: -30px;
    height: 800px !important;
    transform: rotateZ(1deg);
    
    @media only screen and (min-width: $screen-xxxl) {
      top: -45px;
      width: toRem(1070) !important;
      height: toRem(952) !important;
      transform: rotateZ(0deg);
    }
    
    @media only screen and (width < 1280px) {
     right: unset;
    }
  }
}
